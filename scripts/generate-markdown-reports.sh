#!/usr/bin/env bash
set -euo pipefail

# Default to Japan time unless caller overrides TZ
TZ=${TZ:-Asia/Tokyo}
export TZ

# Generate Markdown reports from OUT_DIR raw files into DEST_DIR
# Usage: generate-markdown-reports.sh <OUT_DIR> <DEST_DIR> [REPO_SLUG] [DATE]

RAW_DIR=${1:?"OUT_DIR is required"}
DEST_DIR=${2:?"DEST_DIR is required"}
REPO_SLUG=${3:-repo}
DATE=${4:-$(date '+%Y-%m-%d')}

mkdir -p "$DEST_DIR"

get_status_icon() {
  case "$1" in
    A) echo "- 🆕 Added: \`$2\`" ;;
    M) echo "- ✏️ Modified: \`$2\`" ;;
    D) echo "- 🗑️ Deleted: \`$2\`" ;;
    R*) echo "- 🔄 Renamed: \`$2\`" ;;
    *) echo "- 📝 $1: \`$2\`" ;;
  esac
}

# daily_commits.md
{
  echo "# 📝 Daily Commits"
  echo ""
  if [ -s "$RAW_DIR/daily_commits_raw.txt" ]; then
    while IFS='|' read -r hash subject author time; do
      echo "## ⏰ $time - \`$hash\`"
      echo "**$subject**"
      echo "*by $author*"
      echo ""
    done < "$RAW_DIR/daily_commits_raw.txt"
  else
    echo "*No commits found for $DATE.*"
  fi
} > "$DEST_DIR/daily_commits.md"

# daily_cumulative_diff.md
{
  echo "# 📋 Daily File Changes"
  echo ""
  if [ -s "$RAW_DIR/daily_cumulative_diff_raw.txt" ]; then
    while read -r line; do
      [ -z "$line" ] && continue
      status=$(echo "$line" | cut -f1)
      file=$(echo "$line" | cut -f2)
      get_status_icon "$status" "$file"
    done < "$RAW_DIR/daily_cumulative_diff_raw.txt"
  else
    echo "*No file changes today.*"
  fi
} > "$DEST_DIR/daily_cumulative_diff.md"

# daily_diff_stats.md
{
  echo "# 📈 Daily Statistics"
  echo ""
  printf '%s\n' '```diff'
  sed 's/```/\\```/g' "$RAW_DIR/daily_diff_stats_raw.txt" 2>/dev/null || true
  printf '%s\n' '```'
} > "$DEST_DIR/daily_diff_stats.md"

# daily_code_diff.md
{
  echo "# 💻 Daily Code Changes"
  echo ""
  printf '%s\n' '```diff'
  sed 's/```/\\```/g' "$RAW_DIR/daily_code_diff_raw.txt" 2>/dev/null || true
  printf '%s\n' '```'
} > "$DEST_DIR/daily_code_diff.md"

# latest_diff.md
{
  echo "# 🔄 Latest Changes (File List)"
  echo ""
  if [ -s "$RAW_DIR/latest_diff_raw.txt" ]; then
    while read -r line; do
      [ -z "$line" ] && continue
      status=$(echo "$line" | cut -f1)
      file=$(echo "$line" | cut -f2)
      get_status_icon "$status" "$file"
    done < "$RAW_DIR/latest_diff_raw.txt"
  else
    echo "*No recent changes.*"
  fi
} > "$DEST_DIR/latest_diff.md"

# latest_code_diff.md
{
  echo "# 🔄 Latest Code Changes"
  echo ""
  printf '%s\n' '```diff'
  sed 's/```/\\```/g' "$RAW_DIR/latest_code_diff_raw.txt" 2>/dev/null || true
  printf '%s\n' '```'
} > "$DEST_DIR/latest_code_diff.md"

# daily_summary.md
COMMITS_COUNT=$(wc -l < "$RAW_DIR/daily_commits_raw.txt" 2>/dev/null || echo 0)
FILES_CHANGED=$(grep -c '^' "$RAW_DIR/daily_cumulative_diff_raw.txt" 2>/dev/null || echo 0)
FIRST_COMMIT_TIME=$(head -1 "$RAW_DIR/daily_commits_raw.txt" 2>/dev/null | cut -d'|' -f4 || echo "N/A")
LAST_COMMIT_TIME=$(tail -1 "$RAW_DIR/daily_commits_raw.txt" 2>/dev/null | cut -d'|' -f4 || echo "N/A")

{
  echo "# 📅 Daily Activity Report"
  echo ""
  echo "## 📊 Summary"
  echo "| Item | Value |"
  echo "|------|-------|"
  echo "| Repository | \`$REPO_SLUG\` |"
  echo "| Date | $DATE |"
  echo "| Total Commits | **$COMMITS_COUNT** |"
  echo "| Files Changed | **$FILES_CHANGED** |"
  echo "| First Activity | $FIRST_COMMIT_TIME |"
  echo "| Last Activity | $LAST_COMMIT_TIME |"
  echo "| Sync Time | $(date '+%H:%M:%S') |"
  echo ""
  if [ -s "$RAW_DIR/daily_commits_raw.txt" ]; then
    echo "## 📝 Commit Details"
    echo ""
    while IFS='|' read -r hash subject author time; do
      echo "### ⏰ $time - \`$hash\`"
      echo "**$subject**"
      echo "*by $author*"
      echo ""
    done < "$RAW_DIR/daily_commits_raw.txt"
  else
    echo "## 📝 Commit Details"
    echo ""
    echo "*No commits found for $DATE.*"
  fi
  echo "---"
  echo "*Generated by Forgejo Actions at $(date '+%Y-%m-%d %H:%M:%S')*"
} > "$DEST_DIR/daily_summary.md"

echo "DEST_DIR=$DEST_DIR"
